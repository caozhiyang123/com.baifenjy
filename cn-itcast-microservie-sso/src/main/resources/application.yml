server:
  port: ${port} #服务端口

spring:
  application:
    name: itcast-microservice-sso
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
# = = = = = = = = = = = = = = = == = = = = = = = = = == = = = = = = = = = = = = = =

#数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    username: root
    password: MyNewPass
    maxActive: 20
    maxWait: 60000
    maxIdle: 8
    minIdle: 8
    initialSize: 10
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall,log4j
    connectionProperties: 
      druid:
        stat:
          mergeSql: true
          slowSqlMillis: 5000
    
  jpa:
    hibernate:
#      ddl-auto: create #ddl-auto:设为create表示每次都重写建表
      ddl-auto: update # ddl-auto:设为update表示每次都不会重写建表
#      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    show-sql: true
    database: MYSQL
    databasePlatform: org.hibernate.dialect.MySQL5InnoDBDialect
    
  redis:
    database: 1   # Redis数据库索引（默认为0）
    host1: 127.0.0.1 # Redis服务器地址
    port1: 6379  # Redis服务器连接端口
    password: 123456 # Redis服务器连接密码（默认为空）
    testOnBorrow: true
    pool:
      max-active: 8  # 连接池最大连接数（使用负值表示没有限制）
      max-wait: 1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 8  # 连接池中的最大空闲连接
      min-idle: 0  # 连接池中的最小空闲连接
    timeout: 0 # 连接超时时间（毫秒）
########################################################

eureka:
  client:
    registerWithEureka: true #是否将自己注册到eureka服务中，本身就是所有无需注册
    fetchRegistry: true #是否从eureka服务中获取信息
    serviceUrl: #Eureka客户端与Eureka服务端交互地址
      defaultZone: http://oriki:1234@127.0.0.1:6868/eureka/,http://oriki:1234@127.0.0.1:6869/eureka/
      # http://127.0.0.1:6868/eureka/ ,http://127.0.0.1:6869/eureka/
    #eurekaServerConnectionTimeoutSeconds: 60
    #eurekaServerReadTimeoutSeconds: 60
  instance:
    prefer-ip-address: true #将自己的ip注册到Eureka服务中
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例Id
    #lease-expiration-duration-in-seconds: 30  #续约更新时间间隔(默认30秒)
    #lease-renewal-interval-in-seconds: 90 #续约到期时间（默认90秒）
    #leaseRenewalIntervalInSecondes: 90 #心跳时间
#  server:
#    enable-self-preservation: false #禁用自我保护模式
#    eviction-interval-timer-in-ms: 60000 #清理间隔（单位毫秒，默认是60*1000）

###########################################################################################
# 修改负载均衡算法：默认是轮询，这里修改为了随机访问
itcast-microservice-item:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

###########################################################################################
logging:
  level:
    root: info
# org.springframework.web:DEBUG
  file: /log/log/order.log
  
  
